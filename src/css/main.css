@charset "UTF-8";
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

* {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  font-family: "Open Sans", sans-serif;
}

html,
body {
  -webkit-overflow-scrolling: touch;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
  line-height: 1.5rem;
  margin: 0;
}

figure {
  margin: 0;
}

img {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  display: block;
  height: auto;
  width: 100%;
}

input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

input[type="search"]::-ms-clear {
  display: none;
}

a {
  -webkit-transition: 0.4s all;
  transition: 0.4s all;
  text-decoration: none;
}

/* =WordPress Core
-------------------------------------------------------------- */
.alignnone {
  margin: 5px 20px 20px 0;
}

.aligncenter,
div.aligncenter {
  display: block;
  margin: 5px auto 5px auto;
}

.alignright {
  float: right;
  margin: 5px 0 20px 20px;
}

.alignleft {
  float: left;
  margin: 5px 20px 20px 0;
}

a img.alignright {
  float: right;
  margin: 5px 0 20px 20px;
}

a img.alignnone {
  margin: 5px 20px 20px 0;
}

a img.alignleft {
  float: left;
  margin: 5px 20px 20px 0;
}

a img.aligncenter {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

.wp-caption {
  background: #fff;
  border: 1px solid #f0f0f0;
  max-width: 96%;
  /* Image does not overflow the content area */
  padding: 5px 3px 10px;
  text-align: center;
}

.wp-caption.alignnone {
  margin: 5px 20px 20px 0;
}

.wp-caption.alignleft {
  margin: 5px 20px 20px 0;
}

.wp-caption.alignright {
  margin: 5px 0 20px 20px;
}

.wp-caption img {
  border: 0 none;
  height: auto;
  margin: 0;
  max-width: 98.5%;
  padding: 0;
  width: auto;
}

.wp-caption p.wp-caption-text {
  font-size: 11px;
  line-height: 17px;
  margin: 0;
  padding: 0 4px 5px;
}

/* Text meant only for screen readers. */
.screen-reader-text {
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
  -webkit-clip-path: inset(50%);
          clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute !important;
  width: 1px;
  word-wrap: normal !important;
  /* Many screen reader and browser combinations announce broken words as they would appear visually. */
}

.screen-reader-text:focus {
  background-color: #eee;
  clip: auto !important;
  -webkit-clip-path: none;
          clip-path: none;
  color: #444;
  display: block;
  font-size: 1em;
  height: auto;
  left: 5px;
  line-height: normal;
  padding: 15px 23px 14px;
  text-decoration: none;
  top: 5px;
  width: auto;
  z-index: 100000;
  /* Above WP toolbar. */
}

.container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  margin: 0 auto;
  max-width: 1140px;
  padding: 0 30px;
  width: 100%;
}

@media (max-width: 22.49em) {
  .container {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    padding: 0 15px;
  }
}

.row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  height: auto;
  min-height: 1px;
  width: 100%;
}

@media (max-width: 22.49em) {
  .row {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}

.row--space-between {
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.column {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  width: 100%;
}

.column--row {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
}

.column--space-left {
  padding-left: calc((100% - 1140px)/2 + 30px);
}

@media (max-width: 74.99em) {
  .column--space-left {
    padding-left: 30px;
  }
}

.column--2 {
  max-width: 50%;
}

@media (max-width: 22.49em) {
  .column--2 {
    max-width: 100%;
  }
}

.column--3 {
  max-width: calc(100%/3);
}

@media (max-width: 22.49em) {
  .column--3 {
    max-width: 100%;
  }
}

.column--4 {
  max-width: 25%;
}

@media (max-width: 22.49em) {
  .column--4 {
    max-width: 100%;
  }
}

.header {
  padding: 3rem 0;
}

.header__logo {
  max-width: 350px;
}

@media (max-width: 22.49em) {
  .header__logo {
    margin: 0 auto;
    max-width: 250px;
  }
}

.header__nav  {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
}

@media (max-width: 22.49em) {
  .header__nav  {
    display: none;
  }
}

.header__nav-menu {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  list-style: none;
  padding: 0;
  margin: 0;
}

.header__nav-option {
  border-left: 1px solid #929292;
  padding-left: 1.5rem;
}

.header__nav-option:not(:last-child) {
  margin-right: 1.5rem;
}

.header__nav-link {
  color: #929292;
  font-weight: 400;
}

.header__nav-link:hover {
  color: #000000;
}

.footer {
  margin-bottom: 2rem;
}

.footer__text {
  color: #929292;
  font-size: 12px;
}

@media (max-width: 22.49em) {
  .footer__text {
    margin-bottom: 1rem;
    text-align: center;
  }
}

.footer__nav  {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
}

.footer__nav-menu {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  list-style: none;
  padding: 0;
  margin: 0;
}

@media (max-width: 22.49em) {
  .footer__nav-menu {
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }
}

.footer__nav-option:not(:last-child) {
  margin-right: 1.5rem;
}

.footer__nav-link {
  color: #929292;
  font-size: 12px;
  font-weight: 400;
}

.footer__nav-link:hover {
  color: #000000;
}

.heading {
  color: #000000;
  font-weight: 400;
  font-size: 37px;
  line-height: 1.3em;
}

@media (max-width: 22.49em) {
  .heading {
    font-size: 30px;
  }
}

.heading--2 {
  font-size: 25px;
  font-weight: 400;
}

@media (max-width: 22.49em) {
  .heading--2 {
    font-size: 25px;
  }
}

.heading--3  {
  font-family: "Satisfy", cursive;
  font-size: 25px;
}

@media (max-width: 22.49em) {
  .heading--3  {
    font-size: 25px;
  }
}

.heading--4 {
  font-size: 19px;
  font-weight: 700;
}

@media (max-width: 22.49em) {
  .heading--4 {
    font-size: 19px;
  }
}

.input {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: #F9F8F8;
  border: 1px solid #929292;
  border-radius: 5px;
  height: 55px;
  margin-bottom: 1.2rem;
  max-width: 100%;
  outline: none;
  padding: 0 1.5rem;
  width: 100%;
}

.check__container {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: #ffffff;
  border: 1px solid #929292;
  border-radius: 3px;
  cursor: pointer;
  display: block;
  height: 18px;
  position: relative;
  max-width: 18px;
  width: 100%;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.check__input {
  cursor: pointer;
  height: 0;
  opacity: 0;
  position: absolute;
  width: 0;
}

.check__input:checked ~ .check__mark:after {
  display: block;
}

.check__mark {
  left: 0;
  height: 18px;
  position: absolute;
  top: 0;
  width: 18px;
}

.check__mark:after {
  border: solid #929292;
  border-width: 0 2px 2px 0;
  display: none;
  content: "";
  height: 10px;
  left: 5px;
  position: absolute;
  top: 1px;
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
  width: 4px;
}

.btn {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  background-color: #ffffff;
  border: 1px solid #ffffff;
  border-radius: 5px;
  color: #444444;
  cursor: pointer;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  font-size: 14px;
  height: 55px;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  letter-spacing: 2px;
  outline: none;
  padding: 13px 36px;
  text-align: center;
  -webkit-transition: all 0.4s;
  transition: all 0.4s;
  vertical-align: middle;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
}

.btn:hover {
  background-color: #b7d4d2;
  border: 1px solid #b7d4d2;
  color: #ffffff;
}

.btn--pink {
  background-color: #fbaac2;
  border: 1px solid #fbaac2;
  color: #ffffff;
}

.btn--pink:hover {
  border: 1px solid #b7d4d2;
}

.text {
  color: #929292;
  font-size: 16px;
  line-height: 1.7em;
}

@media (max-width: 22.49em) {
  .text {
    font-size: 14px;
  }
}

.text--sub {
  font-size: 19px;
}

@media (max-width: 22.49em) {
  .text--sub {
    font-size: 17px;
  }
}

.box {
  margin-top: 1rem;
  position: relative;
}

.box__secondbg {
  background-color: #F9F8F8;
  bottom: 0;
  height: 47%;
  position: absolute;
  width: 100%;
}

.box__container {
  position: relative;
  z-index: 9;
}

.box__rounded {
  background-color: #ffffff;
  border-radius: 10px;
  -webkit-box-shadow: 3px 0px 15px rgba(0, 0, 0, 0.1);
          box-shadow: 3px 0px 15px rgba(0, 0, 0, 0.1);
  overflow: hidden;
  margin-bottom: 1.5rem;
}

.box__column--left {
  max-width: 40%;
}

.box__column--right {
  max-width: 60%;
  padding: 2.5rem 3rem;
}

@media (max-width: 22.49em) {
  .box__column--right {
    padding: 2rem;
  }
}

.box__tag {
  position: absolute;
  max-width: 170px;
  left: calc(40% - 180px);
  top: -3rem;
  z-index: 9;
}

@media (max-width: 61.24em) {
  .box__tag {
    left: calc((50% - 170px) - 1.5rem);
  }
}

@media (max-width: 22.49em) {
  .box__tag {
    left: 1.5rem;
    max-width: 115px;
    top: -2rem;
  }
}

.box__picture {
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

@media (max-width: 22.49em) {
  .box__picture {
    height: 375px;
  }
}

.box__form-title {
  margin-bottom: 2rem;
}

.box__form-description {
  font-weight: 400;
  margin-bottom: 1.5rem;
}

.box__form-counter {
  color: #fbaac2;
  font-weight: 600;
}

.box__form-row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
}

@media (max-width: 22.49em) {
  .box__form-row {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}

.box__form-row--space-between {
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.box__form-column {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  max-width: calc(50% - 0.5rem);
  width: 100%;
}

@media (max-width: 22.49em) {
  .box__form-column {
    max-width: 100%;
  }
}

.box__form-column--full {
  max-width: 100%;
}

.box__form-column--row {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
}

.box__form-check-container {
  display: inline-block;
  margin-right: 1rem;
  margin-bottom: 1.5rem;
}

.box__form-policy {
  -ms-flex-item-align: center;
      align-self: center;
  color: #929292;
  font-size: 16px;
  display: inline-block;
  margin-bottom: 1.5rem;
}

.box__form-link {
  color: #929292;
  font-size: 16px;
  text-decoration: underline;
}

.box__form-submit {
  max-width: 100%;
  width: 100%;
}

@media (max-width: 22.49em) {
  .box__form-submit {
    height: auto;
    white-space: pre-wrap;
  }
}

.box__call-us {
  color: #929292;
  text-align: right;
  margin-bottom: 1rem;
}

@media (max-width: 22.49em) {
  .box__call-us {
    text-align: center;
  }
}

.box__link-phone {
  color: #929292;
  font-weight: 600;
}

@media (max-width: 22.49em) {
  .box__link-phone {
    display: block;
  }
}

.detail {
  background-color: #F9F8F8;
  padding: 2rem 0 4rem 0;
}

.detail__column {
  position: relative;
}

.detail__arrow {
  max-width: 200px;
  position: absolute;
  right: 32%;
  top: -2rem;
}

@media (max-width: 22.49em) {
  .detail__arrow {
    display: none;
  }
}

.detail__title {
  margin-bottom: 2rem;
  max-width: 40%;
}

@media (max-width: 22.49em) {
  .detail__title {
    max-width: 100%;
  }
}

.detail__text:not(:last-child) {
  margin-bottom: 3rem;
}

.stickers {
  background-color: #F9F8F8;
  padding-bottom: 5rem;
}

@media (max-width: 22.49em) {
  .stickers {
    padding-bottom: 3rem;
  }
}

.stickers__column {
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start;
}

.stickers__grid {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  height: 150px;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  max-width: 100%;
  width: 100%;
}

@media (max-width: 61.24em) {
  .stickers__grid {
    height: 100px;
  }
}

@media (max-width: 22.49em) {
  .stickers__grid {
    height: auto;
  }
}

.stickers__img {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  max-width: calc((100% / 6) - 1.5rem);
  width: 100%;
}

@media (max-width: 22.49em) {
  .stickers__img {
    max-width: calc((100% / 2) - 1.5rem);
  }
}

.testimonials {
  padding: 5rem 0;
  position: relative;
  z-index: 1;
}

.testimonials__subtitle {
  color: #000000;
  font-weight: 400;
  margin-bottom: 1rem;
  text-align: center;
}

@media (max-width: 22.49em) {
  .testimonials__subtitle {
    display: none;
  }
}

.testimonials__title {
  font-size: 45px;
  margin-bottom: 2rem;
  text-align: center;
}

@media (max-width: 22.49em) {
  .testimonials__title {
    font-size: 32px;
    margin-bottom: 1rem;
  }
}

.testimonials__description {
  margin: 0 auto 3rem auto;
  max-width: 780px;
  text-align: center;
}

.testimonials__slider {
  padding: 0;
}

.testimonials__slider-slide {
  cursor: pointer;
}

.testimonials__author {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  margin: 0 auto;
  text-align: center;
}

.testimonials__author-pic {
  border-radius: 90px;
  margin-right: 2rem;
  max-width: 90px;
}

.testimonials__author-detail {
  color: #0b0b0b;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  text-align: left;
}

.testimonials__author-name {
  font-weight: 700;
}

.testimonials__author-job {
  color: #b7d4d2;
  font-weight: 700;
}

.offerbox {
  margin-bottom: 8rem;
}

@media (max-width: 22.49em) {
  .offerbox {
    margin-bottom: 7rem;
  }
}

.offerbox__container {
  position: relative;
}

.offerbox__arrow {
  right: 2rem;
  max-width: 60px;
  position: absolute;
  top: -10rem;
  z-index: 9;
}

@media (max-width: 22.49em) {
  .offerbox__arrow {
    display: none;
  }
}

.offerbox__rounded {
  border-radius: 10px;
  -webkit-box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2);
          box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2);
  overflow: hidden;
  position: relative;
}

.offerbox__column {
  padding: 2rem;
}

.offerbox__column--pink {
  background-color: #fbaac2;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.offerbox__title {
  color: #000000;
  font-weight: 400;
  margin-bottom: 0.5rem;
}

@media (max-width: 22.49em) {
  .offerbox__title {
    text-align: center;
  }
}

@media (max-width: 22.49em) {
  .offerbox__description {
    text-align: center;
  }
}

.offerbox__link {
  margin: 0 auto;
  max-width: 368px;
  width: 100%;
}

.default {
  padding: 5rem 0 6rem 0;
}

@media (max-width: 22.49em) {
  .default {
    padding: 0 0 4rem 0;
  }
}

.default__title {
  margin-bottom: 4rem;
}

.default__content p {
  margin-bottom: 1.5rem;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
